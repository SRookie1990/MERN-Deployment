{"version":3,"sources":["components/List.jsx","views/Main.jsx","views/ShowUpdated.jsx","views/Form.jsx","views/Fail.jsx","views/Detail.jsx","App.js","reportWebVitals.js","index.js"],"names":["List","pets","setPets","to","map","pet","style","margin","textAlign","name","type","_id","Main","useState","useEffect","axios","get","then","res","data","catch","err","console","log","ShowUpdated","id","setName","setType","description","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","dbErrors","setDbErrors","skill","navigate","idx","color","onSubmit","e","preventDefault","put","errors","response","messages","Object","keys","error","message","htmlFor","onChange","target","value","length","Form","props","likes","post","Fail","Detail","setPet","setLikes","backgroundColor","onClick","deletedID","delete","filter","x","App","className","from","noThrow","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e73b40c9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, navigate } from \"@reach/router\";\r\nimport axios from \"axios\";\r\n\r\nconst List = ({ pets, setPets }) => {\r\n  // console.log(pets.petName);\r\n\r\n  // Delete onClick function\r\n  const deletePet = (deletedID) => {\r\n    console.log(deletedID);\r\n\r\n    axios\r\n      .delete(`http://localhost:8000/api/pets/${deletedID}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        // Navigates back home\r\n        navigate(\"/\");\r\n        // remove product from the DOM after success\r\n        setPets(pets.filter((pet) => pet._id !== deletedID));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Pet Shelter</h1>\r\n\r\n      <Link to={\"/pets/new\"}>Add an pet</Link>\r\n      <br />\r\n      <br />\r\n\r\n      <h2>These pets are looking for a good home</h2> \r\n\r\n      {pets.map((pet) => {\r\n        return (\r\n          <table style={{margin: \"auto\"}} key={pet._id}>\r\n            <thead>\r\n                <tr>\r\n                    <th>Pet</th>\r\n                    <th>Type</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody >\r\n              <tr>\r\n                  <td style={{textAlign: \"left\"}}>\r\n                    {pet.name}\r\n                  </td>\r\n                  <td>\r\n                    {pet.type}\r\n                  </td>\r\n                  <td>\r\n                    <Link to={`/pets/${pet._id}`}>Details</Link> |&#160;\r\n                    <Link to={`/pets/edit/${pet._id}`}>Edit</Link> \r\n                  </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport List from '../components/List';\r\n\r\nconst Main = () => {\r\n\r\n    const [pets, setPets] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/pets')\r\n            .then(res => setPets(res.data))\r\n            .catch(err => console.log(\"Error: \", err))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <List pets={pets} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\n\r\nconst ShowUpdated = ({id}) => {\r\n    \r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState([]);\r\n    const [skill2, setSkill2] = useState([]);\r\n    const [skill3, setSkill3] = useState([]);\r\n    const [dbErrors, setDbErrors] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Getting the current vals by id\r\n        axios.get(`http://localhost:8000/api/pets/${id}`)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                setName(res.data.name);\r\n                setType(res.data.type);\r\n                setDescription(res.data.description);\r\n                setSkill1(res.data.skill1);\r\n                setSkill2(res.data.skill2);\r\n                setSkill3(res.data.skill3);\r\n                console.log(res.data.skill);\r\n            })\r\n            // Bonus Feature+++++++++++++++++++++++++++++\r\n            .catch(err => navigate(\"/404\"))\r\n    }, [id])\r\n\r\n    const updateHandler = e => {\r\n        e.preventDefault();\r\n        // Setting the new vals on form submission\r\n        axios.put(`http://localhost:8000/api/pets/${id}`, {\r\n            name,\r\n            type,\r\n            description,\r\n            skill1,\r\n            skill2,\r\n            skill3\r\n        })\r\n        .then(res => {\r\n            console.log(res)\r\n            navigate(\"/\");\r\n        })\r\n        .catch((err) => {\r\n            const {errors} = err.response.data;\r\n            const messages = Object.keys(errors).map(error => errors[error].message);\r\n            // const errorResponse = err.response.data.errors; // Get the errors from err.response.data\r\n            // const errorArr = []; // Define a temp error array to push the messages in\r\n            // for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\r\n            //     errorArr.push(errorResponse[key].message)\r\n            // }\r\n            // // Set Errors\r\n            setDbErrors(messages);\r\n          });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {dbErrors.map((err, idx) => <p style={{color: \"red\"}} key={idx}>{err}</p>)}\r\n           \r\n            <h1>Pet Shelter</h1>\r\n\r\n            <h2>Edit {name}</h2>\r\n\r\n            <form onSubmit={updateHandler}>\r\n                <p>  \r\n                    <label htmlFor=\"\">Pet Name:</label>&#160;&#160;&#160;\r\n                    <input type=\"text\" onChange={ (e) => setName(e.target.value) } value={name} />\r\n                </p>\r\n                {/* Client-side validation */}\r\n                {\r\n                    (name.length !== 0 && name.length < 3) ?\r\n                    <p style={{color:'red'}}>Client Validation Error: Author's name must be atleast 3 characters!</p> :\r\n                        ''\r\n                }\r\n                <p>  \r\n                    <label htmlFor=\"\">Pet Type:</label>&#160;&#160;&#160;\r\n                    <input type=\"text\" onChange={ (e) => setType(e.target.value) } value={type} />\r\n                </p>\r\n                <p>  \r\n                    <label htmlFor=\"\">Pet Description:</label>&#160;&#160;&#160;\r\n                    <input type=\"text\" onChange={ (e) => setDescription(e.target.value) } value={description} />\r\n                </p>\r\n\r\n                <h3>Skills (optional):</h3>\r\n                \r\n                <p>  \r\n                    <label htmlFor=\"\">Skill 1:</label>&#160;&#160;&#160;\r\n                    <input type=\"text\" onChange={ (e) => setSkill1(e.target.value) } value={skill1} />\r\n                </p>\r\n                <p>  \r\n                    <label htmlFor=\"\">Skill 2:</label>&#160;&#160;&#160;\r\n                    <input type=\"text\" onChange={ (e) => setSkill2(e.target.value) } value={skill2} />\r\n                </p>\r\n                <p>  \r\n                    <label htmlFor=\"\">Skill 3:</label>&#160;&#160;&#160;\r\n                    <input type=\"text\" onChange={ (e) => setSkill3(e.target.value) } value={skill3} />\r\n                </p>\r\n                {/* Link tag inside around a button tag */}\r\n                <Link to={\"/\"}><button>Cancel</button></Link>\r\n                <input type=\"submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowUpdated;\r\n","import React, { useState } from \"react\";\r\nimport { Link, navigate } from \"@reach/router\";\r\nimport axios from \"axios\";\r\n\r\nconst Form = (props) => {\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [skill1, setSkill1] = useState(\"\");\r\n  const [skill2, setSkill2] = useState(\"\");\r\n  const [skill3, setSkill3] = useState(\"\");\r\n  const [likes, setLikes] = useState(0)\r\n  const [dbErrors, setDbErrors] = useState([]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    axios.post(\"http://localhost:8000/api/pets\", {\r\n        name,\r\n        type,\r\n        description,\r\n        skill1,\r\n        skill2,\r\n        skill3,\r\n        likes\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        // Set back to default after creation\r\n        setName(\"\");\r\n        // Navigate back to Main.jsx\r\n        navigate(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        const { errors } = err.response.data;\r\n        const messages = Object.keys(errors).map((error) => errors[error].message);\r\n        // const errorResponse = err.response.data.errors; // Get the errors from err.response.data\r\n        // const errorArr = []; // Define a temp error array to push the messages in\r\n        // for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\r\n        //     errorArr.push(errorResponse[key].message)\r\n        // }\r\n        // Set Errors\r\n        setDbErrors(messages);\r\n      });\r\n  };\r\n\r\n  // Cancel submission and go back to the Main.jsx\r\n  //   const cancelSubmission = () => {\r\n  //     navigate(\"/\");\r\n  //   };\r\n  // Used Linked button instead\r\n\r\n  return (\r\n    <div>\r\n      {dbErrors.map((err, idx) => (<p style={{ color: \"red\" }} key={idx}>{err}</p>))}\r\n\r\n      <form onSubmit={submitHandler}>\r\n        <p>\r\n          <label htmlFor=\"\">Pet Name:</label>&#160;&#160;&#160;\r\n          <input type=\"text\" onChange={(e) => setName(e.target.value)}value={name}/>\r\n        </p>\r\n        {/* Client-side validation */}\r\n        {\r\n            (name.length !== 0 && name.length < 3) ?\r\n            <p style={{color:'red'}}>Client Validation Error: Author's name must be atleast 3 characters!</p> :\r\n                ''\r\n          }\r\n        <p>\r\n          <label htmlFor=\"\">Pet Type:</label>&#160;&#160;&#160;\r\n          <input type=\"text\" onChange={(e) => setType(e.target.value)} value={type} />\r\n        </p>\r\n        <p>\r\n          <label htmlFor=\"\">Pet Description:</label>&#160;&#160;&#160;\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            value={description}\r\n          />\r\n        </p>\r\n\r\n        <h3>Skills (optional):</h3>\r\n\r\n        <p>\r\n          <label htmlFor=\"\">Skill 1:</label>&#160;&#160;&#160;\r\n          <input type=\"text\" onChange={(e) => setSkill1(e.target.value)} value={skill1} />\r\n        </p>\r\n        <p>\r\n          <label htmlFor=\"\">Skill 2:</label>&#160;&#160;&#160;\r\n          <input type=\"text\" onChange={(e) => setSkill2(e.target.value)} value={skill2}/>\r\n        </p>\r\n        <p>\r\n          <label htmlFor=\"\">Skill 3:</label>&#160;&#160;&#160;\r\n          <input type=\"text\" onChange={(e) => setSkill3(e.target.value)} value={skill3}/>\r\n        </p>\r\n\r\n        {/* Link tag inside around a button tag */}\r\n        <Link to={\"/\"}><button>Cancel</button></Link>\r\n        <input type=\"submit\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport { Link } from '@reach/router';\r\n\r\nconst Fail = (props) => {\r\n    return (\r\n        <div>\r\n           <h3>We're sorry, but we could not find the author you are looking for. If you would like to add this author, <Link to={\"/authors/new\"}>Click here!</Link></h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Fail;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link, navigate } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nconst Detail = ({id}) => {\r\n\r\n    const [pet, setPet] = useState({});\r\n    const [likes, setLikes] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8000/api/pets/${id}`)\r\n            .then(res => {\r\n              setPet(res.data);\r\n              setLikes(res.data);\r\n            })\r\n    }, [id]);\r\n\r\n    // Delete onClick function\r\n  const adoptPet = (deletedID) => {\r\n    console.log(deletedID);\r\n\r\n    axios.delete(`http://localhost:8000/api/pets/${deletedID}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        // Navigates back home\r\n        navigate(\"/\");\r\n        // remove product from the DOM after success\r\n        setPet(pet.filter((x) => x._id !== deletedID));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n    //Like onClick function\r\n  const likePet = (e) => {\r\n    // e.preventDefault(id);\r\n    // console.log(likeID);\r\n\r\n    axios.put(`http://localhost:8000/api/pets/${id}`,{\r\n            likes\r\n        })\r\n      .then((res) => console.log(res.data.likes))\r\n      .catch((err) => console.log(err));\r\n  };\r\n  \r\n\r\n    return (\r\n        <div>\r\n            <h1>Pet Shelter</h1>\r\n\r\n            <h2>Details about: {pet.name}</h2>\r\n\r\n            <button style={{backgroundColor: 'red', color: 'white'}} onClick={(e) => {adoptPet(pet._id)}}>Adopt {pet.name}</button>\r\n\r\n            <p>Pet Type: {pet.type}</p>\r\n            <p>Description: {pet.description}</p>\r\n            <p>Skills:</p>\r\n            <p>{pet.skill1}</p>\r\n            <p>{pet.skill2}</p>\r\n            <p>{pet.skill3}</p>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <button style={{backgroundColor: 'green', color: 'white'}} onClick={(e) => likePet(setLikes(likes + 1))}>Like {pet.name}</button>\r\n            <p>{pet.likes} like(s)</p>\r\n            <Link to=\"/\">back to home</Link> |&#160;\r\n            <Link to={\"/pets/edit/\" + pet._id }>Edit</Link>\r\n            {/* <button onClick={ (e) => {deletePet(pet._id)}}>Delete</button>  */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Detail;","import Main from './views/Main';\nimport ShowUpdated from './views/ShowUpdated';\nimport Form from './views/Form';\nimport Fail from './views/Fail'\nimport Detail from './views/Detail';\nimport { Router, Redirect } from '@reach/router';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        \n      <Router>\n        <Redirect from=\"/\" to=\"/pets\" noThrow=\"true\" />\n        <ShowUpdated path=\"/pets/edit/:id\" />\n        <Detail path=\"pets/:id\" />\n        <Form path=\"/pets/new\" />\n        {/* bonus feature */}\n        <Fail path=\"/404\" />\n        <Main path=\"/pets\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}